/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ETHPoolManager,
  ETHPoolManagerInterface,
} from "../ETHPoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrawed",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_userPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addReward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addTeamMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTeamMember",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTempReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600060015560006002556000600355600060075534801561002457600080fd5b5061004161003661004660201b60201c565b61004e60201b60201c565b610112565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611455806101216000396000f3fe6080604052600436106100c65760003560e01c8063715018a61161007f578063d0e30db011610059578063d0e30db01461023a578063df6cdb2114610244578063e59a58ee14610281578063f2fde38b1461028b576100cd565b8063715018a6146101cd578063881ea9a2146101e45780638da5cb5b1461020f576100cd565b806309a69f57146100cf57806312065fe0146100fa578063326dbb31146101255780633ccfd60b146101625780633eb2b5ad1461017957806366fceba4146101a2576100cd565b366100cd57005b005b3480156100db57600080fd5b506100e46102b4565b6040516100f19190611081565b60405180910390f35b34801561010657600080fd5b5061010f6102be565b60405161011c9190611081565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610d85565b6102c6565b6040516101599190611081565b60405180910390f35b34801561016e57600080fd5b506101776102de565b005b34801561018557600080fd5b506101a0600480360381019061019b9190610d85565b6105c0565b005b3480156101ae57600080fd5b506101b761076f565b6040516101c49190611081565b60405180910390f35b3480156101d957600080fd5b506101e2610779565b005b3480156101f057600080fd5b506101f9610801565b6040516102069190610f9f565b60405180910390f35b34801561021b57600080fd5b5061022461088f565b6040516102319190610f5b565b60405180910390f35b6102426108b8565b005b34801561025057600080fd5b5061026b60048036038101906102669190610d85565b6109a3565b6040516102789190611081565b60405180910390f35b6102896109bb565b005b34801561029757600080fd5b506102b260048036038101906102ad9190610d85565b610b54565b005b6000600254905090565b600047905090565b60056020528060005260406000206000915090505481565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035790611021565b60405180910390fd5b60006103ca6001546103bc600254600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c4c90919063ffffffff16565b610c6290919063ffffffff16565b905060003373ffffffffffffffffffffffffffffffffffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361043091906110f1565b60405161043c90610f46565b60006040518083038185875af1925050503d8060008114610479576040519150601f19603f3d011682016040523d82523d6000602084013e61047e565b606091505b50509050806104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610fe1565b60405180910390fd5b610516600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600154610c7890919063ffffffff16565b6001819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061057682600254610c7890919063ffffffff16565b6002819055507fba5a0c0b7729b9774e61656bc459fba2190706e84ddb059fcd206d5ab3de9b3433836040516105ad929190610f76565b60405180910390a1816007819055505050565b6105c8610c8e565b73ffffffffffffffffffffffffffffffffffffffff166105e661088f565b73ffffffffffffffffffffffffffffffffffffffff161461063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390611041565b60405180910390fd5b6000805b600680549050811015610701578273ffffffffffffffffffffffffffffffffffffffff166006828154811061069e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ee5760019150610701565b80806106f990611242565b915050610640565b508061076b576006829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b6000600754905090565b610781610c8e565b73ffffffffffffffffffffffffffffffffffffffff1661079f61088f565b73ffffffffffffffffffffffffffffffffffffffff16146107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ec90611041565b60405180910390fd5b6107ff6000610c96565b565b6060600680548060200260200160405190810160405280929190818152602001828054801561088557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161083b575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61090a34600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5a90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061096234600154610d5a90919063ffffffff16565b6001819055507f951fdc61d6a98f96098a17ea6ac287a6fd38aea6bef73083c93b274cb830107d3334604051610999929190610f76565b60405180910390a1565b60046020528060005260406000206000915090505481565b6000805b600680549050811015610a80573373ffffffffffffffffffffffffffffffffffffffff1660068281548110610a1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a6d5760019150610a80565b8080610a7890611242565b9150506109bf565b5080610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab890610fc1565b60405180910390fd5b6000600254148015610ad557506000600354145b80610af0575062093a8060035442610aed91906111d2565b10155b610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2690611061565b60405180910390fd5b610b4434600254610d5a90919063ffffffff16565b6002819055504260038190555050565b610b5c610c8e565b73ffffffffffffffffffffffffffffffffffffffff16610b7a61088f565b73ffffffffffffffffffffffffffffffffffffffff1614610bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc790611041565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611001565b60405180910390fd5b610c4981610c96565b50565b60008183610c5a9190611178565b905092915050565b60008183610c709190611147565b905092915050565b60008183610c8691906111d2565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610d6891906110f1565b905092915050565b600081359050610d7f81611408565b92915050565b600060208284031215610d9757600080fd5b6000610da584828501610d70565b91505092915050565b6000610dba8383610dc6565b60208301905092915050565b610dcf81611206565b82525050565b610dde81611206565b82525050565b6000610def826110ac565b610df981856110c4565b9350610e048361109c565b8060005b83811015610e35578151610e1c8882610dae565b9750610e27836110b7565b925050600181019050610e08565b5085935050505092915050565b6000610e4f601e836110e0565b9150610e5a826112e9565b602082019050919050565b6000610e726012836110e0565b9150610e7d82611312565b602082019050919050565b6000610e956026836110e0565b9150610ea08261133b565b604082019050919050565b6000610eb86015836110e0565b9150610ec38261138a565b602082019050919050565b6000610edb6020836110e0565b9150610ee6826113b3565b602082019050919050565b6000610efe6018836110e0565b9150610f09826113dc565b602082019050919050565b6000610f216000836110d5565b9150610f2c82611405565b600082019050919050565b610f4081611238565b82525050565b6000610f5182610f14565b9150819050919050565b6000602082019050610f706000830184610dd5565b92915050565b6000604082019050610f8b6000830185610dd5565b610f986020830184610f37565b9392505050565b60006020820190508181036000830152610fb98184610de4565b905092915050565b60006020820190508181036000830152610fda81610e42565b9050919050565b60006020820190508181036000830152610ffa81610e65565b9050919050565b6000602082019050818103600083015261101a81610e88565b9050919050565b6000602082019050818103600083015261103a81610eab565b9050919050565b6000602082019050818103600083015261105a81610ece565b9050919050565b6000602082019050818103600083015261107a81610ef1565b9050919050565b60006020820190506110966000830184610f37565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006110fc82611238565b915061110783611238565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561113c5761113b61128b565b5b828201905092915050565b600061115282611238565b915061115d83611238565b92508261116d5761116c6112ba565b5b828204905092915050565b600061118382611238565b915061118e83611238565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111c7576111c661128b565b5b828202905092915050565b60006111dd82611238565b91506111e883611238565b9250828210156111fb576111fa61128b565b5b828203905092915050565b600061121182611218565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061124d82611238565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112805761127f61128b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4d73672e73656e646572206d757374206265207465616d206d656d6265720000600082015250565b7f4661696c656420746f2077697468647261770000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4465706f736974656420616d6f756e7420697320300000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4c6f636b54696d65206973206e6f742066696e69736865640000000000000000600082015250565b50565b61141181611206565b811461141c57600080fd5b5056fea2646970667358221220ab2619bf56368c1b022ec0b26bf57df2c8da6e6f0120895e80c433d4a832125864736f6c63430008040033";

export class ETHPoolManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ETHPoolManager> {
    return super.deploy(overrides || {}) as Promise<ETHPoolManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ETHPoolManager {
    return super.attach(address) as ETHPoolManager;
  }
  connect(signer: Signer): ETHPoolManager__factory {
    return super.connect(signer) as ETHPoolManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHPoolManagerInterface {
    return new utils.Interface(_abi) as ETHPoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHPoolManager {
    return new Contract(address, _abi, signerOrProvider) as ETHPoolManager;
  }
}
